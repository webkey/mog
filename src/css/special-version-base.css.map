{"version":3,"sources":["special-version-base.sass","utils/_special-version-variables.sass","../libs/include-media/dist/_include-media.scss","special-version-base.css","utils/_mixins.sass","utils/_placeholders.sass"],"names":[],"mappings":"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","file":"special-version-base.css","sourcesContent":["@import \"../libs/include-media/dist/include-media\";\n@import \"utils/special-version-variables\";\n@import \"utils/functions\";\n@import \"utils/mixins\";\n@import \"utils/placeholders\";\n\n// variables\n$displace: 1px;\n// variables end\n\n.spec-panel {\n\tdisplay: none;\n\tposition: relative;\n\twidth: nth($spec-panel-size, 2);\n\tmax-width: #{$spec-text-page};\n\tmargin: 0 auto 20px;\n\tz-index: 999;\n\tbox-sizing: border-box;\n\tborder: 0 solid currentColor;\n\tborder-width: 0 $spec-border-width $spec-border-width;\n\t// transition\n\t$prop: transform, box-shadow;\n\twill-change: $prop;\n\ttransition: {\n\t\tproperty: $prop;\n\t\tduration: 0.2s;\n\t\ttiming-function: ease-in-out; }\n\n\t@include media('<mob-md') {\n\t\theight: nth($spec-panel-size--sm, 1);\n\t\twidth: nth($spec-panel-size--sm, 2);\n\t\tborder-width: 0 0 2px 0;\n\t\t$sh1: 0 0 0 2px;\n\t\t$sh2: 0 4px 4px;\n\t\tbox-shadow: $sh1 currentColor, $sh2 rgba($spec-text-color, 0.3);\n\n\t\t.#{$spec-mod--scheme-wb} & {\n\t\t\tbox-shadow: $sh1 currentColor, $sh2 rgba($spec-text-color--scheme-wb, 0.3); }\n\n\t\t.#{$spec-mod--scheme-blue} & {\n\t\t\tbox-shadow: $sh1 currentColor, $sh2 rgba($spec-text-color--scheme-blue, 0.3); }\n\n\t\t.#{$spec-mod--scheme-green} & {\n\t\t\tbox-shadow: $sh1 currentColor, $sh2 rgba($spec-text-color--scheme-green, 0.3); } }\n\n\t&.settings-is-open {\n\t\tbox-shadow: 0 0 0 4px currentColor; }\n\n\t.#{$spec-mod} & {\n\t\tdisplay: block; } }\n\n.spec-panel__layout {\n\toverflow: hidden;\n\toverflow-y: hidden;\n\toverflow-x: hidden;\n\tbox-sizing: border-box;\n\t@include spec-reset-bg;\n\n\t&:hover,\n\t.touchevents &,\n\t.no-js & {\n\t\toverflow-x: auto; } }\n\n.spec-panel__holder {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tbox-sizing: border-box;\n\tpadding: 0 round($spec-panel-inner-space / 2);\n\n\t@include media('<mob-md') {\n\t\theight: nth($spec-panel-size--sm, 1);\n\t\tpadding: 0 round($spec-panel-inner-space--sm / 2); } }\n\n.spec-panel__layout,\n.spec-panel__holder,\n.spec-panel__item,\n.spec-panel__footer {\n\theight: nth($spec-panel-size, 1); }\n\n.spec-panel__item, .spec-panel__footer {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tpadding: 0 round($spec-panel-inner-space / 2); }\n\n.spec-panel__footer {\n\tmargin-left: auto; }\n\n.spec-panel__label {\n\twhite-space: nowrap;\n\tpadding-right: round($spec-panel-inner-space / 2);\n\t//font-family: Arial, Helvetica, sans-serif\n\tfont-family: inherit;\n\tfont-size: 18px;\n\tline-height: 22px;\n\tletter-spacing: normal;\n\tword-spacing: normal;\n\tword-break: normal;\n\n\t//+media('<mob-md')\n }\t//adding: 0 round($spec-panel-inner-space--sm / 2)\n\n.spec-panel__btn-group {\n\tdisplay: flex;\n\talign-items: center;\n\tborder-color: currentColor;\n\tmargin-right: round($spec-panel-inner-space / 2);\n\n\t@include media('<mob-md') {\n\t\tmargin-right: round($spec-panel-inner-space--sm / 2); }\n\n\t&:last-child {\n\t\tmargin-right: 0; } }\n\n.spec-panel__btn {\n\tposition: relative;\n\tdisplay: inline-block;\n\tvertical-align: top;\n\twidth: $spec-panel__btn-size;\n\theight: $spec-panel__btn-size;\n\tmargin-right: round($spec-panel-inner-space / 2);\n\tfont-size: 18px;\n\tline-height: 22px;\n\tletter-spacing: normal;\n\tword-spacing: normal;\n\tborder-radius: 4px;\n\t//border: 1px solid $spec-text-color\n\tborder: 1px solid currentColor;\n\tbox-sizing: border-box;\n\t// reset outline\n\toutline: none;\n\t-webkit-tap-highlight-color: rgba(0,0,0,0) !important;\n\tuser-select: none !important;\n\n\t&, .#{$spec-mod} & {\n\t\ttext-decoration: none;\n\t\tcolor: currentColor; }\n\n\t@include media('<mob-md') {\n\t\twidth: $spec-panel__btn-size;\n\t\theight: $spec-panel__btn-size;\n\t\tmargin-right: round($spec-panel-inner-space--sm / 2); }\n\n\t&:last-child {\n\t\tmargin-right: 0; }\n\n\t& > span {\n\t\tdisplay: none; }\n\n\tsvg {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tbox-sizing: border-box;\n\n\t\t@include media('<mob-md') {\n\t\t\ttransform: translate(-50%, -50%) scale(0.85); } }\n\n\tpath {\n\t\tfill: currentColor; }\n\n\t// states of special buttons\n\t@include spec-button-states; }\n\n.spec-panel__btn_color_def {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color;\n\t\tbackground-color: $spec-bg-color; } }\n\n.spec-panel__btn_color_white {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color--scheme-wb;\n\t\tbackground-color: $spec-bg-color--scheme-wb; } }\n\n.spec-panel__btn_color_blue {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color--scheme-blue;\n\t\tbackground-color: $spec-bg-color--scheme-blue; } }\n\n.spec-panel__btn_color_green {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color--scheme-green;\n\t\tbackground-color: $spec-bg-color--scheme-green; } }\n\n$icon-spacing--size: 16px 2px; // h w\n$icon-spacing--space: 3px; // h\n.spec-panel__btn_spacing_sm, .spec-panel__btn_spacing_md, .spec-panel__btn_spacing_lg {\n\t.icon {\n\t\t&, &::before, &::after {\n\t\t\tdisplay: block;\n\t\t\tposition: absolute;\n\t\t\tleft: 50%;\n\t\t\ttop: 50%;\n\t\t\theight: nth($icon-spacing--size, 1);\n\t\t\twidth: nth($icon-spacing--size, 2);\n\t\t\tbackground-color: currentColor; }\n\n\t\t& {\n\t\t\tmargin: -#{round(nth($icon-spacing--size, 1)/2)} 0 0 -#{round(nth($icon-spacing--size, 2)/2)};\n\n\t\t\t@include media('<mob-md') {\n\t\t\t\ttransform: scale(0.85); } }\n\n\t\t&::before, &::after {\n\t\t\tcontent: \"\";\n\t\t\tmargin-top: -#{round(nth($icon-spacing--size, 1)/2)}; }\n\n\t\t&::before {\n\t\t\tmargin-left: -#{$icon-spacing--space + round(nth($icon-spacing--size, 2)*1.5)}; }\n\n\t\t&::after {\n\t\t\tmargin-left: #{$icon-spacing--space + round(nth($icon-spacing--size, 2)*0.5)}; } } }\n\n.spec-panel__btn_spacing_md {\n\t.icon {\n\t\t$icon-spacing--space: 6px; // h\n\n\t\t&::before {\n\t\t\tmargin-left: -#{$icon-spacing--space + round(nth($icon-spacing--size, 2)*1.5)}; }\n\n\t\t&::after {\n\t\t\tmargin-left: #{$icon-spacing--space + round(nth($icon-spacing--size, 2)*0.5)}; } } }\n\n.spec-panel__btn_spacing_lg {\n\t.icon {\n\t\t$icon-spacing--space: 9px; // h\n\n\t\t&::before {\n\t\t\tmargin-left: -#{$icon-spacing--space + round(nth($icon-spacing--size, 2)*1.5)}; }\n\n\t\t&::after {\n\t\t\tmargin-left: #{$icon-spacing--space + round(nth($icon-spacing--size, 2)*0.5)}; } } }\n\n// Special Version Advanced Settings\n.spec-drop {\n\t@include spec-reset-bg;\n\toverflow: hidden;\n\tdisplay: none; }\n\n.spec-drop__layout {\n\tpadding: $spec-panel-inner-space;\n\tborder-top: $spec-border-width solid currentColor; }\n\n.spec-drop__title {\n\t@include spec-font-size--title;\n\t//+font(36px, 48px)\n\tfont-weight: bold;\n\t//letter-spacing: normal\n\t//word-spacing: normal\n\tword-wrap: break-word;\n\tmargin-bottom: round($spec-panel-inner-space / 2);\n\n\t.spec-drop__item + & {\n\t\tmargin-top: round($spec-panel-inner-space * 2); } }\n\n.spec-drop__item, .spec-drop__footer {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tmargin: round($spec-panel-inner-space / 2) 0 0;\n\n\t.spec-drop__title + & {\n\t\tmargin-top: 0; } }\n\n.spec-drop__footer {\n\tmargin-top: round($spec-panel-inner-space * 2);\n\tjustify-content: flex-end; }\n\n.spec-drop__label {\n\tdisplay: inline-block; // if not support flex\n\tvertical-align: top; // if not support flex\n\tmargin: round($spec-panel-inner-space / 2);\n\tmargin-left: 0;\n\t@include spec-font-size--item;\n\t//+font(22px, 34px)\n\t//font-weight: bold\n\t//letter-spacing: normal\n\t//word-spacing: normal\n\tword-wrap: break-word; }\n\n.spec-drop__btn-group {\n\tdisplay: inline-block; // if not support flex\n\tvertical-align: top; // if not support flex\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: flex-start;\n\talign-items: center;\n\talign-items: stretch;\n\tmargin-right: round($spec-panel-inner-space / 2);\n\n\t@include media('<mob-md') {\n\t\tmargin-right: round($spec-panel-inner-space--sm / 2); }\n\n\t&:last-child {\n\t\tmargin-right: 0; } }\n\n.spec-drop__btn {\n\tposition: relative;\n\tdisplay: inline-block; // if not support flex\n\tvertical-align: top; // if not support flex\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tmargin: round($spec-panel-inner-space / 2);\n\tmargin-left: 0;\n\tpadding: 0 0.5em;\n\t//+spec-font-size--normal\n\t//letter-spacing: normal\n\t//word-spacing: normal\n\tmin-height: 50px;\n\tborder-radius: 4px;\n\tbox-sizing: border-box;\n\tborder: 1px solid currentColor;\n\t// reset outline\n\toutline: none;\n\t-webkit-tap-highlight-color: rgba(0,0,0,0) !important;\n\tuser-select: none !important;\n\n\t&, .#{$spec-mod} & {\n\t\ttext-decoration: none;\n\t\tcolor: currentColor; }\n\n\t@include media('<mob-md') {\n\t\theight: $spec-panel__btn-size;\n\t\tmargin: 0 0 0 round($spec-panel-inner-space--sm / 2); }\n\n\tsvg {\n\t\t//display: none\n\t\tbox-sizing: border-box;\n\t\tmargin-right: 5px; }\n\n\tpath {\n\t\tfill: currentColor; }\n\n\t.icon {\n\t\tdisplay: none; }\n\n\t// states of special buttons\n\t@include spec-button-states; }\n\n// Font size\n//.spec-drop__btn_size_sm,\n//.spec-drop__btn_size_md,\n//.spec-drop__btn_size_lg\n//etter-spacing: inherit\n//ord-spacing: inherit\n\n.spec-drop__btn_size_sm {\n\t@include spec-font-size--small; }\n\n.spec-drop__btn_size_md {\n\t@include spec-font-size--normal; }\n\n.spec-drop__btn_size_lg {\n\t@include spec-font-size--large; }\n\n// Letter spacing\n//.spec-drop__btn_spacing_normal,\n//.spec-drop__btn_spacing_md,\n//.spec-drop__btn_spacing_lg\n//ont-size: inherit\n\n.spec-drop__btn_spacing_normal {\n\tletter-spacing: $spec-letter-spacing--normal;\n\tword-spacing: $spec-letter-spacing--normal; }\n\n.spec-drop__btn_spacing_md {\n\tletter-spacing: $spec-letter-spacing--medium;\n\tword-spacing: $spec-letter-spacing--medium; }\n\n.spec-drop__btn_spacing_lg {\n\tletter-spacing: $spec-letter-spacing--large;\n\tword-spacing: $spec-letter-spacing--large; }\n\n// color scheme\n.spec-drop__btn_color_def {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color;\n\t\tbackground-color: $spec-bg-color; } }\n\n.spec-drop__btn_color_white {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color--scheme-wb;\n\t\tbackground-color: $spec-bg-color--scheme-wb; } }\n\n.spec-drop__btn_color_blue {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color--scheme-blue;\n\t\tbackground-color: $spec-bg-color--scheme-blue; } }\n\n.spec-drop__btn_color_green {\n\t&, .#{$spec-mod} & {\n\t\tcolor: $spec-text-color--scheme-green;\n\t\tbackground-color: $spec-bg-color--scheme-green; } }\n\n// Special Version Advanced Settings end\n\n// Duplicate Special Version Panel\n.spec-panel-mob {\n\tposition: fixed;\n\tleft: 0;\n\tbottom: 0;\n\twidth: 100%;\n\tborder-width: 2px;\n\n\t.spec-drop {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\tbottom: nth($spec-panel-size, 1) + 20; } }\n\n// Duplicate Special Version Panel end\n\n\n\n\n/*button switch special version */\n.spec-btn-switcher {\n\tposition: fixed;\n\tleft: 10px;\n\ttop: 10px;\n\tpadding-left: 1.9em;\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 18px;\n\tline-height: 30px;\n\tletter-spacing: normal;\n\tcolor: inherit;\n\tfont-weight: bold;\n\tfont-style: normal;\n\tbox-sizing: border-box;\n\tz-index: 9999;\n\n\tbody:not(.#{$spec-mod}) &.to_normal {\n\t\tdisplay: none; }\n\n\t.#{$spec-mod} &:not(.to_normal) {\n\t\tdisplay: none; }\n\n\tsvg {\n\t\t@include size(1.4em);\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 50%;\n\t\ttransform: translate(0, -50%);\n\t\tbox-sizing: border-box;\n\n\t\t//&.icon-spec-on\n\t\t//isplay: block\n\n\t\t//vspec &\n\t\t//display: none\n\n\t\t//&.icon-spec-off\n\t\t//isplay: none\n\n\t\t//vspec &\n }\t\t//display: block\n\n\tpath {\n\t\tfill: currentColor; }\n\n\t// in header\n\t.header & {\n\t\tposition: absolute;\n\t\tleft: auto;\n\t\tright: 15px;\n\t\ttop: 15px;\n\n\t\t@include media('<tab-lg') {\n\t\t\tright: 90px;\n\t\t\ttop: 5px; }\n\n\t\t.home-page & {\n\t\t\tcolor: white; }\n\n\t\tspan {\n\t\t\t@include media('<tab-lg') {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tvertical-align: top;\n\t\t\t\tfont-size: 14px; }\n\n\t\t\t@include media('<mob-md') {\n\t\t\t\twidth: 110px;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tline-height: 16px; } }\n\n\t\t.#{$spec-mod} & {\n\t\t\tcolor: currentColor;\n\t\t\ttop: auto;\n\t\t\tright: 0;\n\t\t\tbottom: 60px;\n\n\t\t\t@include media('<tab-lg') {\n\t\t\t\ttop: auto;\n\t\t\t\tbottom: 10px;\n\t\t\t\tright: 0; }\n\n\t\t\t@include media('<mob-lg') {\n\t\t\t\torder: 4;\n\t\t\t\tposition: relative;\n\t\t\t\ttop: auto;\n\t\t\t\tbottom: auto;\n\t\t\t\tright: auto;\n\t\t\t\talign-self: self-start; }\n\n\t\t\tspan {\n\t\t\t\twidth: auto;\n\t\t\t\tline-height: inherit; } } }\n\n\t// in footer\n\t.footer & {\n\t\tposition: absolute;\n\t\tleft: auto;\n\t\ttop: auto;\n\t\tbottom: 10px;\n\t\tcolor: rgba(white, 0.8);\n\n\t\t.#{$spec-mod} & {\n\t\t\tcolor: currentColor;\n\t\t\tposition: relative;\n\t\t\tbottom: auto; } } }\n\n/*button switch special version end */\n\n// только для текущего проекта\n.footer-nav {\n\tposition: relative; }\n\n//.nav-opened-before .spec-panel\n//include media('<mob-md')\n//transform: translate(0, -110%)\n","@import \"functions\";\n@import \"placeholders\";\n\n\n// Media query\n// ==========================================================================\n$breakpoints: ('desk-qhd': 2560px, 'desk-hd': 1920px, 'desk-lg': 1600px, 'desk-ml': 1440px, 'desk-md': 1366px, 'desk-sm': 1200px, 'tab-lg': 980px, 'tab-sm': 768px, 'mob-lg': 640px, 'mob-md': 480px, 'mob-sm': 320px);\n$user-content: 'user-content' !default;\n\n// ##########################################################################\n\n\n// Special Classes\n// ==========================================================================\n$spec-mod: 'vspec' !default;\n$spec-mod--image-on: 'vspec-mod_img_on' !default;\n$spec-mod--image-off: 'vspec-mod_img_off' !default;\n$spec-mod--mono: 'vspec-mod_mono' !default;\n$spec-mod--font-small: 'vspec-mod_font-size_sm' !default;\n$spec-mod--font-normal: 'vspec-mod_font-size_norm' !default;\n$spec-mod--font-large: 'vspec-mod_font-size_lg' !default;\n$spec-mod--spacing-normal: 'vspec-mod_spacing_norm' !default;\n$spec-mod--spacing-medium: 'vspec-mod_spacing_md' !default;\n$spec-mod--spacing-large: 'vspec-mod_spacing_lg' !default;\n$spec-mod--scheme-def: 'vspec-mod_scheme-color_def' !default;\n$spec-mod--scheme-wb: 'vspec-mod_scheme-color_white' !default;\n$spec-mod--scheme-blue: 'vspec-mod_scheme-color_blue' !default;\n$spec-mod--scheme-green: 'vspec-mod_scheme-color_green' !default;\n\n// Special Panel\n// ==========================================================================\n//$spec-panel-size: 100% 70px // height width\n$spec-panel-size: 74px auto; // height width\n$spec-panel-size--sm: 56px auto; // height width\n$spec-panel-inner-space: 20px;\n$spec-panel-inner-space--sm: 10px;\n$spec-panel__btn-size: 42px;\n$spec-panel__btn-size--sm: 36px;\n$spec-panel__btn-arr-size: 24px;\n$spec-panel__btn-shadow-inside: 0 0 0 2px;\n$spec-panel__btn-shadow-outside: 0 0 0 5px;\n$spec-panel__btn-shadow-hover: inset 0 0 0 3px;\n\n\n// СПЕЦИАЛЬНАЯ ВЕРСИЯ: НАСТРОЙКИ\n// ==========================================================================\n\n// Специальная версия: Цветовая схема - Черным по белому (стандартная)\n// ---------------------------------------------------------------------------\n$spec-text-color: #000 !default;\n$spec-bg-color: #fff !default;\n\n// Специальная версия: Цветовая схема - Белым по черному\n// ---------------------------------------------------------------------------\n$spec-text-color--scheme-wb: #fff !default;\n$spec-bg-color--scheme-wb: #000 !default;\n\n// Специальная версия: Цветовая схема - Синим по голубому\n// ---------------------------------------------------------------------------\n$spec-text-color--scheme-blue: #004c92 !default;\n$spec-bg-color--scheme-blue: #c8e5ff !default;\n\n// Специальная версия: Цветовая схема - Зеленым по темно-коричневому\n// ---------------------------------------------------------------------------\n$spec-text-color--scheme-green: #a9e44d !default;\n$spec-bg-color--scheme-green: #3b2716 !default;\n\n\n// Fonts\n// ==========================================================================\n\n// Стандартный базовый шрифт\n// ---------------------------------------------------------------------------\n$spec-font-size: 18px !default; // 18px (1em)\n$spec-line-height: round-float(30px / $spec-font-size, 2) !default; // 30px --> 1.67\n\n@mixin spec-font-size--normal() {\n\tfont-size: $spec-font-size;\n\tline-height: $spec-line-height; }\n\n// Settings: Размер шрифта - Уменьшенный базовый шрифт\n// ---------------------------------------------------------------------------\n$spec-font-size--small: 14px !default;\n$spec-line-height--small: round-float(24px / $spec-font-size--small, 2) !default; // 24px --> 1.71\n\n@mixin spec-font-size--small() {\n\tfont-size: $spec-font-size--small;\n\tline-height: $spec-line-height--small; }\n\n// Settings: Размер шрифта - Увеличенный базовый шрифт\n// ---------------------------------------------------------------------------\n$spec-font-size--large: 30px !default;\n$spec-line-height--large: round-float(45px / $spec-font-size--large, 2) !default; // 45px --> 1.5\n\n@mixin spec-font-size--large() {\n\tfont-size: $spec-font-size--large;\n\tline-height: $spec-line-height--large; }\n\n// H1, Заголовок страницы\n// ---------------------------------------------------------------------------\n//$spec-title-font-size: 36px !default // В px. Менять размер через панель настроект нет необходимости\n$spec-title-font-size: round-float(36px / $spec-font-size, 2) * 1em !default; // 36px --> 12em\n$spec-title-line-height: round-float(48px / 36px, 2) !default; // 48px --> 1.33\n\n@mixin spec-font-size--title() {\n\tfont-size: $spec-title-font-size;\n\tline-height: $spec-title-line-height; }\n\n// H2, Заголовки секций\n// ---------------------------------------------------------------------------\n$spec-section-font-size: round-float(26px / $spec-font-size, 2) * 1em !default; // 26px --> 1.44em\n$spec-section-line-height: round-float(38px / 26px, 2) !default; // 38px --> 1.44\n\n@mixin spec-font-size--section() {\n\tfont-size: $spec-section-font-size;\n\tline-height: $spec-section-line-height; }\n\n// H3, Заголовки пунктов\n// ---------------------------------------------------------------------------\n$spec-item-font-size: round-float(22px / $spec-font-size, 2) * 1em !default; // 22px --> 1.22em\n$spec-item-line-height: round-float(34px / 22px, 2) !default; // 34px --> 1.55\n\n@mixin spec-font-size--item() {\n\tfont-size: $spec-item-font-size;\n\tline-height: $spec-item-line-height; }\n\n// Мелкий текст: сноски, даты и т.д.\n// ---------------------------------------------------------------------------\n$spec-small-text-font-size: round-float(16px / $spec-font-size, 2) * 1em !default; // 16px --> 0.89em\n$spec-small-text-line-height: round-float(28px / 16px, 2) !default; // 28px --> 1.75\n\n@mixin spec-font-size--note() {\n\tfont-size: $spec-small-text-font-size;\n\tline-height: $spec-small-text-line-height; }\n\n\n// Базовый межбуквенный интервал\n// ---------------------------------------------------------------------------\n$spec-letter-spacing--normal: normal !default;\n\n// Settings: Средний межбуквенный интервал\n// ---------------------------------------------------------------------------\n$spec-letter-spacing--medium: 0.2em !default;\n\n// Settings: Бальшой межбуквенный интервал\n// ---------------------------------------------------------------------------\n$spec-letter-spacing--large: 0.5em !default;\n\n\n// Отступы\n// ==========================================================================\n\n// Отступы горизонтальные\n// ---------------------------------------------------------------------------\n$spec-space: 1.5em !default;\n$spec-space--sm: 1.25em !default;\n$spec-space--mob: 1em !default;\n$spec-page-space: (round-float(40px / $spec-font-size, 2) * 1em) (round-float(40px / $spec-font-size, 2) * 1em) !default;\n$spec-page-space--md: (round-float(20px / $spec-font-size, 2) * 1em) (round-float(20px / $spec-font-size, 2) * 1em) !default;\n$spec-page-space--sm: (round-float(15px / $spec-font-size, 2) * 1em) (round-float(15px / $spec-font-size, 2) * 1em) !default;\n\n// Максимальная ширина контента\n// ---------------------------------------------------------------------------\n$spec-text-page: 1280px !default;\n$spec-text-layout: 44em !default; // Задавать нужно в em, чтобы при изменении размера шрифта, количество символов в строке сохранялось. Примерно 85 символов в строке\n$spec-text-layout--sm: 36em !default; // Для небольших экранов\n\n// Отступы вертикальные\n// ---------------------------------------------------------------------------\n$spec-bottom-space: 1.2em !default;\n$spec-bottom-space-element: round-float($spec-bottom-space / 2, 1) !default;\n$spec-bottom-space-item: round-float($spec-bottom-space * 2, 1) !default;\n$spec-bottom-space-section: round-float($spec-bottom-space * 3, 1) !default;\n$spec-bottom-space-section--sm: round-float($spec-bottom-space * 3, 1) !default;\n\n\n// Borders\n// ==========================================================================\n$spec-border-width: 2px;\n\n// Reset font style\n@mixin spec-font-reset() {\n\tfont: {\n\t\tfamily: inherit;\n\t\tweight: normal;\n\t\tstyle: normal;\n\t\tsize: inherit; }\n\tline-height: inherit;\n\tletter-spacing: inherit;\n\tcolor: inherit;\n\ttext-align: left;\n\ttext-transform: none;\n\twhite-space: normal; }\n\n// Reset background\n@mixin spec-reset-bg() {\n\tbackground-color: $spec-bg-color;\n\n\t.#{$spec-mod--scheme-wb} & {\n\t\tbackground-color: $spec-bg-color--scheme-wb; }\n\n\t.#{$spec-mod--scheme-blue} & {\n\t\tbackground-color: $spec-bg-color--scheme-blue; }\n\n\t.#{$spec-mod--scheme-green} & {\n\t\tbackground-color: $spec-bg-color--scheme-green; } }\n\n// Reset background + invert\n@mixin spec-reset-bg-invert() {\n\tcolor: $spec-bg-color;\n\tbackground-color: $spec-text-color;\n\n\t.#{$spec-mod--scheme-wb} & {\n\t\tcolor: $spec-bg-color--scheme-wb;\n\t\tbackground-color: $spec-text-color--scheme-wb; }\n\n\t.#{$spec-mod--scheme-blue} & {\n\t\tcolor: $spec-bg-color--scheme-blue;\n\t\tbackground-color: $spec-text-color--scheme-blue; }\n\n\t.#{$spec-mod--scheme-green} & {\n\t\tcolor: $spec-bg-color--scheme-green;\n\t\tbackground-color: $spec-text-color--scheme-green; } }\n\n// Reset all styles\n@mixin spec-reset-full() {\n\tdisplay: block;\n\t//display: initial\n\tfloat: none;\n\tposition: initial;\n\toverflow: visible;\n\theight: auto;\n\tmin-height: 0;\n\tmax-height: none;\n\twidth: auto;\n\tmin-width: 0;\n\tmax-width: none;\n\tleft: auto;\n\ttop: auto;\n\tright: auto;\n\tbottom: auto;\n\tpadding: 0;\n\tmargin: 0;\n\ttransform: none;\n\tborder: none;\n\tbackground-color: transparent;\n\tbox-shadow: none;\n\topacity: 1;\n\tvisibility: visible;\n\tz-index: auto;\n\tfont: {\n\t\tfamily: inherit;\n\t\tweight: normal;\n\t\tstyle: normal;\n\t\tsize: inherit; }\n\ttext-indent: 0;\n\tline-height: inherit;\n\tletter-spacing: inherit;\n\tword-spacing: inherit;\n\tcolor: inherit;\n\ttext-align: left;\n\ttext-transform: none; }\n\n// Список классов-исключений для тегов ul, ol\n// Добавляются к типографическим стилям списков ul, ol, чтобы не применять стили для указанных класов\n// Example: $not-list-classes: ':not(.class1):not(.class2)'\n// Enter: .user-content ul:not(.class1):not(.class1)\n// ==========================================================================\n$not-list-classes: ':not(.breadcrumbs-list):not(.social-networks):not(.sorting-drop):not(.years-drop):not(.map-legend__list)';\n\n\n// Main Navigation\n// ==========================================================================\n$main-nav-height--spec: 80px;\n$main-nav-height--spec--sm: 60px;\n\n\n// Button State\n// ==========================================================================\n/// @description: Примесь добавляет на кнопки настроек специальной версии выд для сотояний: :hover, :focus, .active\n@mixin spec-button-states() {\n\t// marker arrow\n\t&::before, &::after {\n\t\tdisplay: none;\n\t\tcontent: \"\";\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\tmargin: 3px 0 3px -#{round($spec-panel__btn-arr-size / 2)};\n\t\tpointer-events: none; }\n\n\t&::before {\n\t\tbottom: 100%;\n\t\t@include triangle(\"bottom\", currentColor, round($spec-panel__btn-arr-size / 2), 0.8); }\n\n\t&::after {\n\t\ttop: 100%;\n\t\t@include triangle(\"top\", currentColor, round($spec-panel__btn-arr-size / 2), 0.8); }\n\n\t// hover, focus\n\t&:hover, &:focus {\n\t\toutline: none;\n\t\tbox-shadow: $spec-panel__btn-shadow-inside $spec-bg-color, $spec-panel__btn-shadow-outside $spec-text-color;\n\n\t\t.#{$spec-mod--scheme-wb} & {\n\t\t\tbox-shadow: $spec-panel__btn-shadow-inside $spec-bg-color--scheme-wb, $spec-panel__btn-shadow-outside $spec-text-color--scheme-wb; }\n\n\t\t.#{$spec-mod--scheme-blue} & {\n\t\t\tbox-shadow: $spec-panel__btn-shadow-inside $spec-bg-color--scheme-blue, $spec-panel__btn-shadow-outside $spec-text-color--scheme-blue; }\n\n\t\t.#{$spec-mod--scheme-green} & {\n\t\t\tbox-shadow: $spec-panel__btn-shadow-inside $spec-bg-color--scheme-green, $spec-panel__btn-shadow-outside $spec-text-color--scheme-green; } }\n\n\t// active\n\t&.active {\n\t\t&:hover, &:focus {\n\t\t\tbox-shadow: $spec-panel__btn-shadow-hover currentColor, $spec-panel__btn-shadow-inside $spec-bg-color, $spec-panel__btn-shadow-outside $spec-text-color;\n\n\t\t\t.#{$spec-mod--scheme-wb} & {\n\t\t\t\tbox-shadow: $spec-panel__btn-shadow-hover currentColor, $spec-panel__btn-shadow-inside $spec-bg-color--scheme-wb, $spec-panel__btn-shadow-outside $spec-text-color--scheme-wb; }\n\n\t\t\t.#{$spec-mod--scheme-blue} & {\n\t\t\t\tbox-shadow: $spec-panel__btn-shadow-hover currentColor, $spec-panel__btn-shadow-inside $spec-bg-color--scheme-blue, $spec-panel__btn-shadow-outside $spec-text-color--scheme-blue; }\n\n\t\t\t.#{$spec-mod--scheme-green} & {\n\t\t\t\tbox-shadow: $spec-panel__btn-shadow-hover currentColor, $spec-panel__btn-shadow-inside $spec-bg-color--scheme-green, $spec-panel__btn-shadow-outside $spec-text-color--scheme-green; } } }\n\n\t&.active {\n\t\t&[tabindex=\"-1\"] {\n\t\t\tcursor: default; }\n\n\t\t// Показывать активное состояние для всех кнопок,\n\t\t// но навидение и фокуса не показыать только для кнопок с tabindex=\"-1\"\n\t\t&, &[tabindex=\"-1\"]:hover, &[tabindex=\"-1\"]:focus {\n\t\t\tbox-shadow: $spec-panel__btn-shadow-hover currentColor; }\n\n\t\t&::before, &::after {\n\t\t\tdisplay: block; } } }\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".spec-panel {\n\tdisplay: none;\n\tposition: relative;\n\twidth: auto;\n\tmax-width: 1280px;\n\tmargin: 0 auto 20px;\n\tz-index: 999;\n\tbox-sizing: border-box;\n\tborder: 0 solid currentColor;\n\tborder-width: 0 2px 2px;\n\twill-change: transform, box-shadow;\n\ttransition-property: transform, box-shadow;\n\ttransition-duration: 0.2s;\n\ttransition-timing-function: ease-in-out;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel {\n\t\theight: 56px;\n\t\twidth: auto;\n\t\tborder-width: 0 0 2px 0;\n\t\tbox-shadow: 0 0 0 2px currentColor, 0 4px 4px rgba(0, 0, 0, 0.3);\n\t}\n\t.vspec-mod_scheme-color_white .spec-panel {\n\t\tbox-shadow: 0 0 0 2px currentColor, 0 4px 4px rgba(255, 255, 255, 0.3);\n\t}\n\t.vspec-mod_scheme-color_blue .spec-panel {\n\t\tbox-shadow: 0 0 0 2px currentColor, 0 4px 4px rgba(0, 76, 146, 0.3);\n\t}\n\t.vspec-mod_scheme-color_green .spec-panel {\n\t\tbox-shadow: 0 0 0 2px currentColor, 0 4px 4px rgba(169, 228, 77, 0.3);\n\t}\n}\n\n.spec-panel.settings-is-open {\n\tbox-shadow: 0 0 0 4px currentColor;\n}\n\n.vspec .spec-panel {\n\tdisplay: block;\n}\n\n.spec-panel__layout {\n\toverflow: hidden;\n\toverflow-y: hidden;\n\toverflow-x: hidden;\n\tbox-sizing: border-box;\n\tbackground-color: #fff;\n}\n\n.vspec-mod_scheme-color_white .spec-panel__layout {\n\tbackground-color: #000;\n}\n\n.vspec-mod_scheme-color_blue .spec-panel__layout {\n\tbackground-color: #c8e5ff;\n}\n\n.vspec-mod_scheme-color_green .spec-panel__layout {\n\tbackground-color: #3b2716;\n}\n\n.spec-panel__layout:hover,\n.touchevents .spec-panel__layout,\n.no-js .spec-panel__layout {\n\toverflow-x: auto;\n}\n\n.spec-panel__holder {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tbox-sizing: border-box;\n\tpadding: 0 10px;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel__holder {\n\t\theight: 56px;\n\t\tpadding: 0 5px;\n\t}\n}\n\n.spec-panel__layout,\n.spec-panel__holder,\n.spec-panel__item,\n.spec-panel__footer {\n\theight: 74px;\n}\n\n.spec-panel__item, .spec-panel__footer {\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tpadding: 0 10px;\n}\n\n.spec-panel__footer {\n\tmargin-left: auto;\n}\n\n.spec-panel__label {\n\twhite-space: nowrap;\n\tpadding-right: 10px;\n\tfont-family: inherit;\n\tfont-size: 18px;\n\tline-height: 22px;\n\tletter-spacing: normal;\n\tword-spacing: normal;\n\tword-break: normal;\n}\n\n.spec-panel__btn-group {\n\tdisplay: flex;\n\talign-items: center;\n\tborder-color: currentColor;\n\tmargin-right: 10px;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel__btn-group {\n\t\tmargin-right: 5px;\n\t}\n}\n\n.spec-panel__btn-group:last-child {\n\tmargin-right: 0;\n}\n\n.spec-panel__btn {\n\tposition: relative;\n\tdisplay: inline-block;\n\tvertical-align: top;\n\twidth: 42px;\n\theight: 42px;\n\tmargin-right: 10px;\n\tfont-size: 18px;\n\tline-height: 22px;\n\tletter-spacing: normal;\n\tword-spacing: normal;\n\tborder-radius: 4px;\n\tborder: 1px solid currentColor;\n\tbox-sizing: border-box;\n\toutline: none;\n\t-webkit-tap-highlight-color: rgba(0, 0, 0, 0) !important;\n\tuser-select: none !important;\n}\n\n.spec-panel__btn, .vspec .spec-panel__btn {\n\ttext-decoration: none;\n\tcolor: currentColor;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel__btn {\n\t\twidth: 42px;\n\t\theight: 42px;\n\t\tmargin-right: 5px;\n\t}\n}\n\n.spec-panel__btn:last-child {\n\tmargin-right: 0;\n}\n\n.spec-panel__btn > span {\n\tdisplay: none;\n}\n\n.spec-panel__btn svg {\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tbox-sizing: border-box;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel__btn svg {\n\t\ttransform: translate(-50%, -50%) scale(0.85);\n\t}\n}\n\n.spec-panel__btn path {\n\tfill: currentColor;\n}\n\n.spec-panel__btn::before, .spec-panel__btn::after {\n\tdisplay: none;\n\tcontent: \"\";\n\tposition: absolute;\n\tleft: 50%;\n\tmargin: 3px 0 3px -12px;\n\tpointer-events: none;\n}\n\n.spec-panel__btn::before {\n\tbottom: 100%;\n\twidth: 0;\n\theight: 0;\n\tz-index: 2;\n\tborder-top: 10px solid currentColor;\n\tborder-left: 12px solid transparent;\n\tborder-right: 12px solid transparent;\n}\n\n.spec-panel__btn::after {\n\ttop: 100%;\n\twidth: 0;\n\theight: 0;\n\tz-index: 2;\n\tborder-bottom: 10px solid currentColor;\n\tborder-left: 12px solid transparent;\n\tborder-right: 12px solid transparent;\n}\n\n.spec-panel__btn:hover, .spec-panel__btn:focus {\n\toutline: none;\n\tbox-shadow: 0 0 0 2px #fff, 0 0 0 5px #000;\n}\n\n.vspec-mod_scheme-color_white .spec-panel__btn:hover, .vspec-mod_scheme-color_white .spec-panel__btn:focus {\n\tbox-shadow: 0 0 0 2px #000, 0 0 0 5px #fff;\n}\n\n.vspec-mod_scheme-color_blue .spec-panel__btn:hover, .vspec-mod_scheme-color_blue .spec-panel__btn:focus {\n\tbox-shadow: 0 0 0 2px #c8e5ff, 0 0 0 5px #004c92;\n}\n\n.vspec-mod_scheme-color_green .spec-panel__btn:hover, .vspec-mod_scheme-color_green .spec-panel__btn:focus {\n\tbox-shadow: 0 0 0 2px #3b2716, 0 0 0 5px #a9e44d;\n}\n\n.spec-panel__btn.active:hover, .spec-panel__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #fff, 0 0 0 5px #000;\n}\n\n.vspec-mod_scheme-color_white .spec-panel__btn.active:hover, .vspec-mod_scheme-color_white .spec-panel__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #000, 0 0 0 5px #fff;\n}\n\n.vspec-mod_scheme-color_blue .spec-panel__btn.active:hover, .vspec-mod_scheme-color_blue .spec-panel__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #c8e5ff, 0 0 0 5px #004c92;\n}\n\n.vspec-mod_scheme-color_green .spec-panel__btn.active:hover, .vspec-mod_scheme-color_green .spec-panel__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #3b2716, 0 0 0 5px #a9e44d;\n}\n\n.spec-panel__btn.active[tabindex=\"-1\"] {\n\tcursor: default;\n}\n\n.spec-panel__btn.active, .spec-panel__btn.active[tabindex=\"-1\"]:hover, .spec-panel__btn.active[tabindex=\"-1\"]:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor;\n}\n\n.spec-panel__btn.active::before, .spec-panel__btn.active::after {\n\tdisplay: block;\n}\n\n.spec-panel__btn_color_def, .vspec .spec-panel__btn_color_def {\n\tcolor: #000;\n\tbackground-color: #fff;\n}\n\n.spec-panel__btn_color_white, .vspec .spec-panel__btn_color_white {\n\tcolor: #fff;\n\tbackground-color: #000;\n}\n\n.spec-panel__btn_color_blue, .vspec .spec-panel__btn_color_blue {\n\tcolor: #004c92;\n\tbackground-color: #c8e5ff;\n}\n\n.spec-panel__btn_color_green, .vspec .spec-panel__btn_color_green {\n\tcolor: #a9e44d;\n\tbackground-color: #3b2716;\n}\n\n.spec-panel__btn_spacing_sm .icon, .spec-panel__btn_spacing_sm .icon::before, .spec-panel__btn_spacing_sm .icon::after, .spec-panel__btn_spacing_md .icon, .spec-panel__btn_spacing_md .icon::before, .spec-panel__btn_spacing_md .icon::after, .spec-panel__btn_spacing_lg .icon, .spec-panel__btn_spacing_lg .icon::before, .spec-panel__btn_spacing_lg .icon::after {\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\theight: 16px;\n\twidth: 2px;\n\tbackground-color: currentColor;\n}\n\n.spec-panel__btn_spacing_sm .icon, .spec-panel__btn_spacing_md .icon, .spec-panel__btn_spacing_lg .icon {\n\tmargin: -8px 0 0 -1px;\n}\n\n@media (max-width: 479px) {\n\t.spec-panel__btn_spacing_sm .icon, .spec-panel__btn_spacing_md .icon, .spec-panel__btn_spacing_lg .icon {\n\t\ttransform: scale(0.85);\n\t}\n}\n\n.spec-panel__btn_spacing_sm .icon::before, .spec-panel__btn_spacing_sm .icon::after, .spec-panel__btn_spacing_md .icon::before, .spec-panel__btn_spacing_md .icon::after, .spec-panel__btn_spacing_lg .icon::before, .spec-panel__btn_spacing_lg .icon::after {\n\tcontent: \"\";\n\tmargin-top: -8px;\n}\n\n.spec-panel__btn_spacing_sm .icon::before, .spec-panel__btn_spacing_md .icon::before, .spec-panel__btn_spacing_lg .icon::before {\n\tmargin-left: -6px;\n}\n\n.spec-panel__btn_spacing_sm .icon::after, .spec-panel__btn_spacing_md .icon::after, .spec-panel__btn_spacing_lg .icon::after {\n\tmargin-left: 4px;\n}\n\n.spec-panel__btn_spacing_md .icon::before {\n\tmargin-left: -9px;\n}\n\n.spec-panel__btn_spacing_md .icon::after {\n\tmargin-left: 7px;\n}\n\n.spec-panel__btn_spacing_lg .icon::before {\n\tmargin-left: -12px;\n}\n\n.spec-panel__btn_spacing_lg .icon::after {\n\tmargin-left: 10px;\n}\n\n.spec-drop {\n\tbackground-color: #fff;\n\toverflow: hidden;\n\tdisplay: none;\n}\n\n.vspec-mod_scheme-color_white .spec-drop {\n\tbackground-color: #000;\n}\n\n.vspec-mod_scheme-color_blue .spec-drop {\n\tbackground-color: #c8e5ff;\n}\n\n.vspec-mod_scheme-color_green .spec-drop {\n\tbackground-color: #3b2716;\n}\n\n.spec-drop__layout {\n\tpadding: 20px;\n\tborder-top: 2px solid currentColor;\n}\n\n.spec-drop__title {\n\tfont-size: 2em;\n\tline-height: 1.33;\n\tfont-weight: bold;\n\tword-wrap: break-word;\n\tmargin-bottom: 10px;\n}\n\n.spec-drop__item + .spec-drop__title {\n\tmargin-top: 40px;\n}\n\n.spec-drop__item, .spec-drop__footer {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tmargin: 10px 0 0;\n}\n\n.spec-drop__title + .spec-drop__item, .spec-drop__title + .spec-drop__footer {\n\tmargin-top: 0;\n}\n\n.spec-drop__footer {\n\tmargin-top: 40px;\n\tjustify-content: flex-end;\n}\n\n.spec-drop__label {\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tmargin: 10px;\n\tmargin-left: 0;\n\tfont-size: 1.22em;\n\tline-height: 1.55;\n\tword-wrap: break-word;\n}\n\n.spec-drop__btn-group {\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: flex-start;\n\talign-items: center;\n\talign-items: stretch;\n\tmargin-right: 10px;\n}\n\n@media (max-width: 479px) {\n\t.spec-drop__btn-group {\n\t\tmargin-right: 5px;\n\t}\n}\n\n.spec-drop__btn-group:last-child {\n\tmargin-right: 0;\n}\n\n.spec-drop__btn {\n\tposition: relative;\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tmargin: 10px;\n\tmargin-left: 0;\n\tpadding: 0 0.5em;\n\tmin-height: 50px;\n\tborder-radius: 4px;\n\tbox-sizing: border-box;\n\tborder: 1px solid currentColor;\n\toutline: none;\n\t-webkit-tap-highlight-color: rgba(0, 0, 0, 0) !important;\n\tuser-select: none !important;\n}\n\n.spec-drop__btn, .vspec .spec-drop__btn {\n\ttext-decoration: none;\n\tcolor: currentColor;\n}\n\n@media (max-width: 479px) {\n\t.spec-drop__btn {\n\t\theight: 42px;\n\t\tmargin: 0 0 0 5px;\n\t}\n}\n\n.spec-drop__btn svg {\n\tbox-sizing: border-box;\n\tmargin-right: 5px;\n}\n\n.spec-drop__btn path {\n\tfill: currentColor;\n}\n\n.spec-drop__btn .icon {\n\tdisplay: none;\n}\n\n.spec-drop__btn::before, .spec-drop__btn::after {\n\tdisplay: none;\n\tcontent: \"\";\n\tposition: absolute;\n\tleft: 50%;\n\tmargin: 3px 0 3px -12px;\n\tpointer-events: none;\n}\n\n.spec-drop__btn::before {\n\tbottom: 100%;\n\twidth: 0;\n\theight: 0;\n\tz-index: 2;\n\tborder-top: 10px solid currentColor;\n\tborder-left: 12px solid transparent;\n\tborder-right: 12px solid transparent;\n}\n\n.spec-drop__btn::after {\n\ttop: 100%;\n\twidth: 0;\n\theight: 0;\n\tz-index: 2;\n\tborder-bottom: 10px solid currentColor;\n\tborder-left: 12px solid transparent;\n\tborder-right: 12px solid transparent;\n}\n\n.spec-drop__btn:hover, .spec-drop__btn:focus {\n\toutline: none;\n\tbox-shadow: 0 0 0 2px #fff, 0 0 0 5px #000;\n}\n\n.vspec-mod_scheme-color_white .spec-drop__btn:hover, .vspec-mod_scheme-color_white .spec-drop__btn:focus {\n\tbox-shadow: 0 0 0 2px #000, 0 0 0 5px #fff;\n}\n\n.vspec-mod_scheme-color_blue .spec-drop__btn:hover, .vspec-mod_scheme-color_blue .spec-drop__btn:focus {\n\tbox-shadow: 0 0 0 2px #c8e5ff, 0 0 0 5px #004c92;\n}\n\n.vspec-mod_scheme-color_green .spec-drop__btn:hover, .vspec-mod_scheme-color_green .spec-drop__btn:focus {\n\tbox-shadow: 0 0 0 2px #3b2716, 0 0 0 5px #a9e44d;\n}\n\n.spec-drop__btn.active:hover, .spec-drop__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #fff, 0 0 0 5px #000;\n}\n\n.vspec-mod_scheme-color_white .spec-drop__btn.active:hover, .vspec-mod_scheme-color_white .spec-drop__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #000, 0 0 0 5px #fff;\n}\n\n.vspec-mod_scheme-color_blue .spec-drop__btn.active:hover, .vspec-mod_scheme-color_blue .spec-drop__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #c8e5ff, 0 0 0 5px #004c92;\n}\n\n.vspec-mod_scheme-color_green .spec-drop__btn.active:hover, .vspec-mod_scheme-color_green .spec-drop__btn.active:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor, 0 0 0 2px #3b2716, 0 0 0 5px #a9e44d;\n}\n\n.spec-drop__btn.active[tabindex=\"-1\"] {\n\tcursor: default;\n}\n\n.spec-drop__btn.active, .spec-drop__btn.active[tabindex=\"-1\"]:hover, .spec-drop__btn.active[tabindex=\"-1\"]:focus {\n\tbox-shadow: inset 0 0 0 3px currentColor;\n}\n\n.spec-drop__btn.active::before, .spec-drop__btn.active::after {\n\tdisplay: block;\n}\n\n.spec-drop__btn_size_sm {\n\tfont-size: 14px;\n\tline-height: 1.71;\n}\n\n.spec-drop__btn_size_md {\n\tfont-size: 18px;\n\tline-height: 1.67;\n}\n\n.spec-drop__btn_size_lg {\n\tfont-size: 30px;\n\tline-height: 1.5;\n}\n\n.spec-drop__btn_spacing_normal {\n\tletter-spacing: normal;\n\tword-spacing: normal;\n}\n\n.spec-drop__btn_spacing_md {\n\tletter-spacing: 0.2em;\n\tword-spacing: 0.2em;\n}\n\n.spec-drop__btn_spacing_lg {\n\tletter-spacing: 0.5em;\n\tword-spacing: 0.5em;\n}\n\n.spec-drop__btn_color_def, .vspec .spec-drop__btn_color_def {\n\tcolor: #000;\n\tbackground-color: #fff;\n}\n\n.spec-drop__btn_color_white, .vspec .spec-drop__btn_color_white {\n\tcolor: #fff;\n\tbackground-color: #000;\n}\n\n.spec-drop__btn_color_blue, .vspec .spec-drop__btn_color_blue {\n\tcolor: #004c92;\n\tbackground-color: #c8e5ff;\n}\n\n.spec-drop__btn_color_green, .vspec .spec-drop__btn_color_green {\n\tcolor: #a9e44d;\n\tbackground-color: #3b2716;\n}\n\n.spec-panel-mob {\n\tposition: fixed;\n\tleft: 0;\n\tbottom: 0;\n\twidth: 100%;\n\tborder-width: 2px;\n}\n\n.spec-panel-mob .spec-drop {\n\tposition: absolute;\n\tleft: 0;\n\twidth: 100%;\n\tbottom: 94px;\n}\n\n/*button switch special version */\n.spec-btn-switcher {\n\tposition: fixed;\n\tleft: 10px;\n\ttop: 10px;\n\tpadding-left: 1.9em;\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-size: 18px;\n\tline-height: 30px;\n\tletter-spacing: normal;\n\tcolor: inherit;\n\tfont-weight: bold;\n\tfont-style: normal;\n\tbox-sizing: border-box;\n\tz-index: 9999;\n}\n\nbody:not(.vspec) .spec-btn-switcher.to_normal {\n\tdisplay: none;\n}\n\n.vspec .spec-btn-switcher:not(.to_normal) {\n\tdisplay: none;\n}\n\n.spec-btn-switcher svg {\n\twidth: 1.4em;\n\theight: 1.4em;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translate(0, -50%);\n\tbox-sizing: border-box;\n}\n\n.spec-btn-switcher path {\n\tfill: currentColor;\n}\n\n.header .spec-btn-switcher {\n\tposition: absolute;\n\tleft: auto;\n\tright: 15px;\n\ttop: 15px;\n}\n\n@media (max-width: 979px) {\n\t.header .spec-btn-switcher {\n\t\tright: 90px;\n\t\ttop: 5px;\n\t}\n}\n\n.home-page .header .spec-btn-switcher {\n\tcolor: white;\n}\n\n@media (max-width: 979px) {\n\t.header .spec-btn-switcher span {\n\t\tdisplay: inline-block;\n\t\tvertical-align: top;\n\t\tfont-size: 14px;\n\t}\n}\n\n@media (max-width: 479px) {\n\t.header .spec-btn-switcher span {\n\t\twidth: 110px;\n\t\tfont-size: 14px;\n\t\tline-height: 16px;\n\t}\n}\n\n.vspec .header .spec-btn-switcher {\n\tcolor: currentColor;\n\ttop: auto;\n\tright: 0;\n\tbottom: 60px;\n}\n\n@media (max-width: 979px) {\n\t.vspec .header .spec-btn-switcher {\n\t\ttop: auto;\n\t\tbottom: 10px;\n\t\tright: 0;\n\t}\n}\n\n@media (max-width: 639px) {\n\t.vspec .header .spec-btn-switcher {\n\t\torder: 4;\n\t\tposition: relative;\n\t\ttop: auto;\n\t\tbottom: auto;\n\t\tright: auto;\n\t\talign-self: self-start;\n\t}\n}\n\n.vspec .header .spec-btn-switcher span {\n\twidth: auto;\n\tline-height: inherit;\n}\n\n.footer .spec-btn-switcher {\n\tposition: absolute;\n\tleft: auto;\n\ttop: auto;\n\tbottom: 10px;\n\tcolor: rgba(255, 255, 255, 0.8);\n}\n\n.vspec .footer .spec-btn-switcher {\n\tcolor: currentColor;\n\tposition: relative;\n\tbottom: auto;\n}\n\n/*button switch special version end */\n.footer-nav {\n\tposition: relative;\n}\n","@import \"special-version-variables\";\n@import \"functions\";\n\n@import \"../../libs/mathsass/dist/math\";\n@import \"../../libs/mathsass/dist/functions/tan\";\n\n////\n/// @author Astronim* Serhiy Ilchenko\n/// @access public\n///\n\n// =============================================================================\n// size\n// =============================================================================\n/// Примесь позволяет определять `width` и `height` одновременно.\n///\n/// @param {Length} $width - `width` элемента\n/// @param {Length} $height ($width) - `height` элемента\n///\n/// @example Sass - Использование\n/// .foo\n///   +size(10em)\n///\n/// .bar\n///   +size(100%, 10em)\n///\n/// @example css - Вывод CSS\n/// .foo {\n///   width: 10em;\n///   height: 10em;\n/// }\n///\n/// .bar {\n///   width: 100%;\n///   height: 10em;\n/// }\n\n@mixin size($width, $height: $width) {\n\twidth: $width;\n\theight: $height; }\n\n// =============================================================================\n// Position\n// =============================================================================\n/// Примесь устанавливает верхнюю и левую координаты\n///\n/// @param {Length} $t [0] - верхняя координата\n/// @param {Length} $l [0] - левая координата\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin position($t: 0, $l: $t) {\n\ttop: $t;\n\tleft: $l; }\n\n// =============================================================================\n// font\n// =============================================================================\n/// Примесь добавляет одновремменно `font-size` и `line-height`\n/// Используются переменный `$font-size` и `$line-height`\n///\n/// @param {Length} $width - `width` элемента\n/// @param {Length} $height ($width) - `height` элемента\n///\n/// @example Sass - Использование\n/// .foo\n///   +font(1.4rem, 1.5)\n///\n/// @example css - Вывод CSS\n/// .foo {\n///   font-size: 1.4rem;\n///   line-height: 1.5;\n/// }\n\n@mixin font($font-size: inherit, $line-height: inherit) {\n\tfont-size: $font-size;\n\tline-height: $line-height; }\n\n// =============================================================================\n// display inline block + vertical align\n// =============================================================================\n/// Примесь задает пару свойст display: inline-block и vertical-align для\n/// выравнивания инлайн-блок элементов по вертикали\n@mixin display-inline-block-top() {\n\tdisplay: inline-block;\n\tvertical-align: top; }\n\n@mixin display-inline-block-middle() {\n\tdisplay: inline-block;\n\tvertical-align: middle; }\n\n@mixin display-inline-block-bottom() {\n\tdisplay: inline-block;\n\tvertical-align: baseline; }\n\n// =============================================================================\n// pseudo\n// =============================================================================\n/// Примесь добавляет к псевдоэлементу базовые свойства.\n///\n/// @param {String} $content [''] - контент псевдоэлемента\n/// @param {String} $display [block] - тип псевдоэлемента\n/// @param {String} $pos [absolute] - позицирование псевдоэлемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   &::before\n///     +pseudo()\n///\n/// .foo\n///   &::before\n///     +pseudo(attr(data), inline-block, relative)\n///\n/// @example css - Вывод CSS\n///\n/// .foo::before {\n///   content: '';\n///   display: block;\n///   position: absolute;\n/// }\n///\n/// .foo::before {\n///   content: attr(data);\n///   display: inline-block;\n///   position: relative;\n/// }\n\n@mixin pseudo($content: '', $display: block, $pos: absolute) {\n\tcontent: $content;\n\tdisplay: $display;\n\tposition: $pos; }\n\n@mixin pseudo-block-relative($content: '') {\n\t@include pseudo($content: $content, $display: block, $pos: relative); }\n\n@mixin pseudo-relative($content: '') {\n\t@include pseudo($content: $content, $display: null, $pos: relative); }\n\n@mixin pseudo-inline-block($content: '') {\n\t@include pseudo($content: $content, $display: inline-block, $pos: null); }\n\n@mixin pseudo-inline-block-relative($content: '') {\n\t@include pseudo($content: $content, $display: inline-block, $pos: relative); }\n\n@mixin pseudo-content($content: '') {\n\t@include pseudo($content: $content, $display: null, $pos: null); }\n\n// =============================================================================\n// antialiased\n// =============================================================================\n/// Нормализует отображение текста, если к нему применяется анимированная трансформация\n///\n/// @param {} hasn't params\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin antialiased() {\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-khtml-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none; }\n\n// =============================================================================\n// clear\n// =============================================================================\n/// Помощник для сброса внутреннего обтекания\n/// @author Николас Галлагер\n/// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix\n\n@mixin clear() {\n\t&::after {\n\t\tcontent: '';\n\t\tdisplay: table;\n\t\tclear: both; } }\n\n// =============================================================================\n// truncate\n// =============================================================================\n/// Обрезает текст и добавляет троеточие\n///\n/// @param {Length} $max-width [320px] - максиальная ширина элемента\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin truncate($max-width: 320px) {\n\tmax-width: $max-width;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\toverflow: hidden; }\n\n// =============================================================================\n// margin-horizontal / margin-vertical / padding-horizontal / padding-vertical\n// =============================================================================\n/// Примеси добавляют горизонтальные/вертикальные внешние/внутренние отстпупы (`margin/padding`)\n/// в развернутом виде.\n///\n/// @param {Length} $left [null] - левый `margin/padding` элемента\n/// @param {Length} $right [$left] - правый `margin/padding` элемента\n/// @param {Length} $top [null] - верхний `margin/padding` элемента\n/// @param {Length} $bottom [$top] - нижний `margin/padding` элемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +margin-horizontal(20px)\n///\n/// .foo\n///   +margin-horizontal(20px, 10px)\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   margin-left: 20px;\n///   margin-right: 20px;\n/// }\n///\n/// .foo {\n///   margin-left: 20px;\n///   margin-right: 10px;\n/// }\n\n@mixin margin-horizontal($left, $right: $left) {\n\tmargin: {\n\t\tright: $right;\n\t\tleft: $left; } }\n\n@mixin margin-vertical($top, $bottom:$top) {\n\tmargin: {\n\t\ttop: $top;\n\t\tbottom: $bottom; } }\n\n@mixin padding-horizontal($left, $right: $left) {\n\tpadding: {\n\t\tright: $right;\n\t\tleft: $left; } }\n\n@mixin padding-vertical($top, $bottom:$top) {\n\tpadding: {\n\t\ttop: $top;\n\t\tbottom: $bottom; } }\n\n// =============================================================================\n// margin / padding\n// =============================================================================\n/// Примеси добавляют внешние/внутренние отстпупы (`margin/padding`) в развернутом виде.\n/// Значения можно добавлять поочередно: верхний, правый, нижний, левый.\n/// Пропустить значение можно задав ему null.\n/// Значения также можно добавлять через ключ: $t, $r, $b, $l, - соответственно.\n/// Если заданно четыре значения не равных null, то `margin` будет в сокращенном виде.\n///\n/// @param {Length} $t [null] - верхний `margin/padding` элемента\n/// @param {Length} $r [null] - правый `margin/padding` элемента\n/// @param {Length} $b [null] - нижний `margin/padding` элемента\n/// @param {Length} $l [null] - левый `margin/padding` элемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +margin(10px, null, 30px, 40px)\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   margin-top: 10px;\n///   margin-bottom: 30px;\n///   margin-left: 40px;\n/// }\n\n@mixin margin($top: null, $right: null, $bottom: null, $left: null) {\n\t@if($top and $right and $bottom and $left) {\n\t\tmargin: $top $right $bottom $left; }\n\n\t@else {\n\t\tmargin: {\n\t\t\t@if $top {\n\t\t\t\ttop: $top; }\n\t\t\t@if $right {\n\t\t\t\tright: $right; }\n\t\t\t@if $bottom {\n\t\t\t\tbottom: $bottom; }\n\t\t\t@if $left {\n\t\t\t\tleft: $left; } } } }\n\n@mixin padding($top: null, $right: null, $bottom: null, $left: null) {\n\t@if($top and $right and $bottom and $left) {\n\t\tpadding: $top $right $bottom $left; }\n\n\t@else {\n\t\tpadding: {\n\t\t\t@if $top {\n\t\t\t\ttop: $top; }\n\t\t\t@if $right {\n\t\t\t\tright: $right; }\n\t\t\t@if $bottom {\n\t\t\t\tbottom: $bottom; }\n\t\t\t@if $left {\n\t\t\t\tleft: $left; } } } }\n\n/// Примесь центрирует блочный элемент с ограниченной шириной.\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +push-auto\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   margin-left: auto;\n///   margin-right: auto;\n/// }\n\n@mixin push-auto() {\n\t@include margin-horizontal(auto); }\n\n/// Примесь позволяет сохранять пропорции элементов при респонсиве\n///\n/// @param {Number} $x [1] - ширина в пропорциональном соотношении\n/// @param {Number} $y [1] - высота в пропорциональном соотношении\n/// @param {Boolean} $pseudo [false] - указывает добавлять псевдоэлемент или\n/// использовать `padding` самого элемента\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +responsive-ratio(1)\n///\n/// .foo\n///   +responsive-ratio(16, 9)\n///\n/// .foo\n///   +responsive-ratio(4, 3, true)\n///\n/// @example css - Вывод CSS\n///\n/// .foo {\n///   padding-top: 100%\n/// }\n///\n/// .foo {\n///   padding-top: 56.25%\n/// }\n///\n/// .foo::before {\n///   content: \"\";\n///   display: block;\n///   position: relative;\n///   height: 0;\n///   width: 100%;\n///   padding-top: 75%;\n/// }\n\n@mixin ratio($x: 1, $y: 1, $pseudo: false) {\n\t$padding: round-float($y / $x * 100%, 2);\n\n\t@if $pseudo {\n\t\t&::before {\n\t\t\t@include pseudo($pos: relative);\n\n\t\t\theight: 0;\n\t\t\tpadding-top: $padding; } }\n\n\t@else {\n\t\theight: 0;\n\t\tpadding-top: $padding; } }\n\n// =============================================================================\n// Сentering\n// =============================================================================\n/// Примесь центрирует элемент относительно родителя\n///\n/// @param {Boolean} $transform [true] - направление выравнивания\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n@mixin centering($width: null, $height: null, $transform: true, $pos: absolute) {\n\tposition: $pos;\n\tleft: 50%;\n\ttop: 50%;\n\n\t@if $transform {\n\t\ttransform: translate(-50%, -50%); }\n\n\t@else {\n\t\twidth: $width;\n\t\theight: $height;\n\t\t@include margin($top: round(-$height*0.5), $left: round(-$width*0.5)); } }\n\n/// 1.1 С помощью \"transform: translate\" без позициирования:\n@mixin centering-transform($pos: null) {\n\tposition: $pos;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%); }\n\n/// 1.2 С помощью \"transform: translate\" + \"position: absolute\":\n@mixin centering-transform-abs() {\n\t@include centering-transform($pos: absolute); }\n\n/// 1.3 С помощью \"transform: translate\" + \"position: relative\":\n@mixin centering-transform-rel() {\n\t@include centering-transform($pos: relative); }\n\n/// 2. С помощью margin:\n@mixin centering-margin($width: null, $height: null, $pos: null) {\n\tposition: $pos;\n\tleft: 50%;\n\ttop: 50%;\n\t@include margin($top: round(-$height*0.5), $left: round(-$width*0.5)); }\n\n// =============================================================================\n// Reset for inline-block elements\n// =============================================================================\n/// обнуляет горизонтальные отступы между `inline-block` елементами\n@mixin clear-spacing() {\n\tfont-size: 0;\n\tletter-spacing: -4px; }\n\n// =============================================================================\n// Grid Item\n// =============================================================================\n/// Формирует упрощенную сетку элементов с применением `display: inline-block`, или `float: left`;\n/// Для родителя наобходимо подключить `+grid-parent`;\n/// В случае с `inline-block` обнулить `font:size` и `letter-spacing` (примесь `+clear-spacing`)\n/// На оберту родителя при необходимости задать `overflow: hidden`;\n/// Для дочерних элементов необходимо подключить `+grid-item` или `+grid-item-float`;\n///\n/// @param {Length} $horizontal-space [20px] - горизонтальные отступы между элементами\n/// @param {Length} $length-in-row [2] - количество элементов в ряду\n/// @param {Length} $bottom-space [$horizontal-space] - нижние отступы элементов\n///\n/// @example Sass - Использование\n/// @example css - Вывод CSS\n\n@mixin grid-parent($horizontal-space: 20px) {\n\tmargin: {\n\t\t@if $horizontal-space == 0 {\n\t\t\tleft: 0;\n\t\t\tright: 0; }\n\t\t@else {\n\t\t\tleft: -#{round($horizontal-space/2)};\n\t\t\tright: -#{round($horizontal-space/2)}; } } }\n\n@mixin grid-item($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\n\tdisplay: inline-block;\n\tvertical-align: top;\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; } }\n\n/// использовать если нужно только поменять количество колонок\n@mixin grid-item-responsive($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; } }\n\n@mixin grid-item-float($length-in-row: 1, $horizontal-space: 20px, $bottom-space: $horizontal-space) {\n\tfloat: left;\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space;\n\t\tclear: none; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; }\n\n\t&:nth-child(#{$length-in-row}n+1) {\n\t\tclear: left; } }\n\n/// использовать если нужно только поменять количество колонок\n@mixin grid-item-float-responsive($length-in-row: 1, $horizontal-space: 0, $bottom-space: $horizontal-space) {\n\twidth: round-float(100%/$length-in-row, 2);\n\tpadding: {\n\t\tleft: round($horizontal-space/2);\n\t\tright: round($horizontal-space/2); }\n\n\t&:nth-child(n) {\n\t\tmargin-top: $bottom-space;\n\t\tclear: none; }\n\n\t&:nth-child(-n+#{$length-in-row}) {\n\t\tmargin-top: 0; }\n\n\t&:nth-child(#{$length-in-row}n+1) {\n\t\tclear: left; } }\n\n// =============================================================================\n// Fill parent with absolute or relative position or without position\n// =============================================================================\n/// Примесь задает блочному элемунту размеры родителя\n///\n/// @param {} no param\n///\n/// @example Sass - Использование\n///\n/// img.foo\n///   +cover\n///\n/// img.foo\n///   +cover-rel()\n///\n/// @example css - Вывод CSS\n///\n/// img.foo {\n///   left: 0;\n///   top: 0;\n///   width: 100%;\n///   height: 100%;\n/// }\n///\n/// img.foo {\n///   position: relative\n///   left: 0;\n///   top: 0;\n///   width: 100%;\n///   height: 100%;\n/// }\n\n@mixin cover($position: null) {\n\t@if $position {\n\t\tposition: $position; }\n\t@include position(0, 0);\n\t@include size(100%); }\n\n@mixin cover-abs() {\n\t@include cover($position: absolute); }\n\n@mixin cover-rel() {\n\t@include cover($position: relative); }\n\n/// Примесь позволяет указывает изображению способ заполнения блока,\n/// в котором находится\n/// Для ie9 необходимо подключить скрипт и прописать дополнительные свойства\n/// @link https://medium.com/@primozcigler/neat-trick-for-css-object-fit-fallback-on-edge-and-other-browsers-afbc53bbb2c3#.e3eu6mvxl\n///\n/// @param {String} $fit [cover] - метод заполнения\n/// @param {String} $pos [relative] - тип позиционирования\n///\n/// @example Sass - Использование\n///\n/// img.foo\n///   +object-fit-position\n///\n/// @example css - Вывод CSS\n///\n/// img.foo {\n///   position: relative\n///   top: 50%\n///   left: 50%\n///   max-width: none\n///   width: auto\n///   min-width: 100%\n///   min-height: 100%\n///   transform: translate(-50%, -50%)\n///   object-fit: cover\n/// }\n\n@mixin object-fit-position($fit: cover, $pos: relative) {\n\tposition: $pos;\n\ttop: 50%;\n\tleft: 50%;\n\tmin-width: 0;\n\tmin-height: 0;\n\tmax-width: none;\n\tmax-height: none;\n\theight: 100%;\n\twidth: 100%;\n\ttransform: translate(-50%, -50%);\n\tbackface-visibility: hidden;\n\tobject-fit: $fit; }\n\n/// This mixin can be used to set the object-fit:\n/// +object-fit(contain)\n///\n/// or object-fit and object-position:\n/// +object-fit(cover, top)\n\n/// need to add this rules\n/// display: block\n/// width: 100%\n/// height: 100%\n/// max-width: none\n\n@mixin object-fit($fit: fill, $position: null) {\n\t//-o-object-fit: $fit\n\tobject-fit: $fit;\n\t@if $position {\n\t\t//-o-object-position: $position\n\t\tobject-position: $position;\n\t\tfont-family: 'object-fit: #{$fit}; object-position: #{$position}'; }\n\t@else {\n\t\tfont-family: 'object-fit: #{$fit}'; } }\n\n// =============================================================================\n// Hide text for screen reader\n// =============================================================================\n/// Примесь скрывает текст, который остается видимым для генераторов речи\n\n@mixin hide-text() {\n\tborder: 0;\n\tclip: rect(0 0 0 0);\n\theight: 1px;\n\tmargin: -1px;\n\toverflow: hidden;\n\tpadding: 0;\n\tposition: absolute;\n\twidth: 1px;\n\n\t&:active, &:focus {\n\t\tclip: auto;\n\t\theight: auto;\n\t\tmargin: 0;\n\t\toverflow: visible;\n\t\tposition: static;\n\t\twidth: auto; } }\n\n// =============================================================================\n// Input placeholder\n// =============================================================================\n/// @param {} - нет параметров\n///\n/// @example Sass - Использование\n/// .foo\n/// \t+placeholder\n/// \t\tcolor: green\n///\n/// +placeholder\n/// \tcolor: red\n///\n/// @example css - Вывод CSS\n/// .foo::-webkit-input-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo:-moz-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo::-moz-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo:-ms-input-placeholder {\n/// \tcolor: green;\n/// }\n/// .foo.placeholder {\n/// \tcolor: green;\n/// }\n///\n/// ::-webkit-input-placeholder {\n/// \tcolor: red;\n/// }\n/// :-moz-placeholder {\n/// \t\tcolor: red;\n/// }\n/// ::-moz-placeholder {\n/// \tcolor: red;\n/// }\n/// :-ms-input-placeholder {\n/// \t\tcolor: red;\n/// }\n/// .placeholder {\n/// \t\tcolor: red;\n/// }\n\n@mixin optional-at-root($sel) {\n\t@at-root #{if(not &, $sel, selector-append(&, $sel))} {\n\t\t@content; } }\n\n@mixin placeholder() {\n\t@include optional-at-root('::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('::-moz-placeholder') {\n\t\topacity: 1;\n\t\t@content; }\n\n\t@include optional-at-root(':-ms-input-placeholder') {\n\t\topacity: 1;\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder') {\n\t\t@content; } }\n\n@mixin placeholder-focus() {\n\t@include optional-at-root(':focus::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':focus:-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':focus::-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':focus:-ms-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder:focus') {\n\t\t@content; } }\n\n@mixin placeholder-hover() {\n\t@include optional-at-root(':hover::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':hover:-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':hover::-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':hover:-ms-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder:hover') {\n\t\t@content; } }\n\n@mixin placeholder-active() {\n\t@include optional-at-root(':active::-webkit-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':active:-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':active::-moz-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root(':active:-ms-input-placeholder') {\n\t\t@content; }\n\n\t@include optional-at-root('.placeholder:active') {\n\t\t@content; } }\n\n// =============================================================================\n// Scroll lock\n// =============================================================================\n/// Примесь блокирования прокрутки страницы.\n///\n/// @param hasn't params\n\n@mixin scroll-blocked() {\n\twidth: 100% !important;\n\theight: 100% !important;\n\tmax-width: 100% !important;\n\tmax-height: 100% !important;\n\tmargin: 0 !important;\n\tpadding: 0 !important;\n\toverflow: hidden !important; }\n\n// =============================================================================\n// Triangle helper mixin\n// =============================================================================\n/// Примесь созадает простую стрелку-треугольник\n/// Применяется к псевдоэлементу\n/// Triangle helper mixin\n/// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`\n/// @param {Color} $color [currentcolor] - Triangle color\n/// @param {Length} $size [1em] - Triangle size\n/// @param {Number} $kef [1em] - Higher-to-base ratio\n///\n/// @example Sass - Использование\n///\n/// .foo::before\n/// \t+triangle(bottom)\n/// \tposition: absolute\n/// \tleft: 50%\n/// \tbottom: 100%\n///\n/// @example css - Вывод CSS\n///\n/// .foo::before {\n/// \twidth: 0;\n/// \theight: 0;\n/// \tcontent: '';\n/// \tz-index: 2;\n/// \tborder-top: 1.5em solid tomato;\n/// \tborder-left: 1em solid transparent;\n/// \tborder-right: 1em solid transparent;\n/// \tposition: absolute;\n/// \tleft: 50%;\n/// \tbottom: 100%;\n/// }\n@mixin triangle($direction, $color: tomato, $size: 1em, $kef: 1.5) {\n\t@if not index(top right bottom left, $direction) {\n\t\t@error \"Direction must be either `top`, `right`, `bottom` or `left`.\"; }\n\n\t//+pseudo()\n\twidth: 0;\n\theight: 0;\n\tz-index: 2;\n\tborder-#{opposite-direction($direction)}: (round($size * $kef)) solid $color;\n\n\t$perpendicular-borders: $size solid transparent;\n\n\t@if $direction == top or $direction == bottom {\n\t\tborder-left: $perpendicular-borders;\n\t\tborder-right: $perpendicular-borders; }\n\t@else if $direction == right or $direction == left {\n\t\tborder-bottom: $perpendicular-borders;\n\t\tborder-top: $perpendicular-borders; } }\n\n// =============================================================================\n// triangle pretty\n// =============================================================================\n/// Примесь формирует стрелку-треугольник с бордером\n/// Применяется к самому элементу, а стрелка-треугольник формируется из псевдоэлементов ::before, ::after\n/// Необходимо подключить плагин mathsass https://www.npmjs.com/package/mathsass\n/// Примесь требует доработки! Действует с ограничениями!\n/// Для правильной работи необходимо строго придерживаться правил добавления параметров\n///\n/// @param {Direction} $direction - Направление стрелки-треугольника: `top`, `right`, `bottom` or `left`\n/// @param {Map} $origins-map [] - Расположение стрелки-треугольника относительно родительского элемента\n///                                Например: (top: 50%, left: 100%) - по правому краю по центру\n///                                Задавать значения необходимо придерживая двух правил:\n///                                1) по первому из значений стрелка-треугольник будет смещена\n///                                   в противоположную сторону на половину ширины основания;\n///                                2) значений должно быть не больше двух, что логично.\n///                                Если нужно разместить стрелку внизу по центру, то значения должны быть такими:\n///                                (right: 50%, bottom: 0) либо (left: 50%, bottom: 0)\n/// @param {Color} $color [brown] - Цвет стрелки-треугольника\n/// @param {Length} $size-towards [30px] - Высота стрелки-треугольника с учетом бордера\n///                                      (от основания до вершины указвающей направление)\n/// @param {Length} $size-across [$size-towards] - Ширина стрелки-треугольника с учетом бордера\n///                                               (ширина основания противоположного вершине указвающей направление)\n/// @param {Color} $bd-color [tomato] - Цвет бордера стрелки-треугольника\n/// @param {Length} $bd-width [2px] - Цвет бордера стрелки-треугольника\n///\n/// @example Sass - Использование\n///\n/// .foo\n///   +triangle-pretty(bottom, (right: 50%, top: 100%), darkolivegreen, 30px, 30px, darkslategray, 3px)\n///\n/// @example css - Вывод CSS\n///\n// .foo::before,\n// .foo::after{\n//   content: \"\";\n//   display: block;\n//   position: absolute;\n//   top: 100%;\n//   right: 50%;\n//   pointer-events: none;\n// }\n// .foo::before{\n//   z-index: 2;\n//   margin-right: -15px;\n//   border-top: 30px solid darkslategray;\n//   border-left: 15px solid transparent;\n//   border-right: 15px solid transparent;\n// }\n// .foo::after{\n//   z-index: 3;\n//   margin-right: -12px;\n//   border-top: 23px solid darkolivegreen;\n//   border-left: 12px solid transparent;\n//   border-right: 12px solid transparent;\n// }\n\n@mixin triangle-pretty($direction, $origins-map: (), $color: brown, $size-towards: 30px, $size-across: $size-towards, $bd-color: tomato, $bd-width: 2px) {\n\t@if not index(top right bottom left, $direction) {\n\t\t@error \"Direction must be either `top`, `right`, `bottom` or `left`.\"; }\n\n\t$unit-size-toward: unit($size-towards);\n\t$unit-size-across: unit($size-across);\n\n\t@if $unit-size-across != $unit-size-across {\n\t\t@error \"Значение высоты треугольника и его основания должны быть в одинаковых единицах измерения\"; }\n\n\t// переменные для смещения стрелки-треугольника назад на половину ширины основания\n\t$top: null;\n\t$right: null;\n\t$bottom: null;\n\t$left: null;\n\t$margin-direct: null;\n\t$i: 0;\n\n\t// определение направления и величины смещения\n\t@each $origin, $value in $origins-map {\n\t\t@if $i == 0 {\n\t\t\t$margin-direct: $origin;\n }\t\t\t//@debug $margin-direct\n\n\t\t$i: $i + 1;\n\n\t\t@if $origin == top {\n\t\t\t$top: $value;\n }\t\t\t//@debug 'top: ' + $value\n\t\t@if $origin == right {\n\t\t\t$right: $value;\n }\t\t\t//@debug 'right: ' + $value\n\t\t@if $origin == bottom {\n\t\t\t$bottom: $value;\n }\t\t\t//@debug 'bottom: ' + $value\n\t\t@if $origin == left {\n\t\t\t$left: $value;\n } }\t\t\t//@debug 'left: ' + $value\n\n\t// вывод общих стилей\n\t&::before, &::after {\n\t\t@include pseudo();\n\t\ttop: $top;\n\t\tright: $right;\n\t\tbottom: $bottom;\n\t\tleft: $left;\n\t\tpointer-events: none; }\n\n\t// вывод стилей большой (внешней) стрелки-треугольника\n\t&::before {\n\t\tz-index: 2;\n\t\t@if $margin-direct {\n\t\t\tmargin-#{$margin-direct}: -#{$size-across*0.5}; }\n\t\tborder-#{opposite-direction($direction)}: $size-towards solid $bd-color;\n\n\t\t$perpendicular-borders: (round($size-across * 0.5)) solid transparent;\n\n\t\t@if $direction == top or $direction == bottom {\n\t\t\tborder-left: $perpendicular-borders;\n\t\t\tborder-right: $perpendicular-borders; }\n\t\t@else if $direction == right or $direction == left {\n\t\t\tborder-bottom: $perpendicular-borders;\n\t\t\tborder-top: $perpendicular-borders; } }\n\n\t// рассчет маленькой стрелки-треугольника по размеру бордера\n\t$tg-angle: (2*$size-towards/$size-across);\n\t$angle: atan($tg-angle);\n\t$sin-angle: sin($angle);\n\t$height-large: $size-across*$sin-angle;\n\t$height-small: $height-large - $bd-width*2;\n\t$small-size-across: $height-small/$sin-angle;\n\t$small-size-toward: $small-size-across/2*$tg-angle;\n\n\t// вывод стилей маленькой (внутренней) стрелки-треугольника\n\t&::after {\n\t\tz-index: 3;\n\t\t@if $margin-direct {\n\t\t\tmargin-#{$margin-direct}: -(round($small-size-across*0.5)); }\n\t\tborder-#{opposite-direction($direction)}: round($small-size-toward) solid $color;\n\n\t\t$perpendicular-borders: (round($small-size-across * 0.5)) solid transparent;\n\n\t\t@if $direction == top or $direction == bottom {\n\t\t\tborder-left: $perpendicular-borders;\n\t\t\tborder-right: $perpendicular-borders; }\n\t\t@else if $direction == right or $direction == left {\n\t\t\tborder-bottom: $perpendicular-borders;\n\t\t\tborder-top: $perpendicular-borders; } } }\n\n// =============================================================================\n// Leaner gradient -vendor\n// =============================================================================\n/// Convert angle\n/// @author Chris Eppstein\n/// @param {Number} $value - Value to convert\n/// @param {String} $unit - Unit to convert to\n/// @return {Number} Converted angle\n///\n@function convert-angle($value, $unit) {\n\t$convertable-units: deg grad turn rad;\n\t$conversion-factors: 1 (10grad / 9deg) (1turn / 360deg) (3.14159rad / 180deg);\n\n\t@if index($convertable-units, unit($value)) and index($convertable-units, $unit) {\n\t\t@return $value / nth($conversion-factors, index($convertable-units, unit($value))) * nth($conversion-factors, index($convertable-units, $unit)); }\n\n\t@warn \"Cannot convert `#{unit($value)}` to `#{$unit}`.\"; }\n\n/// Test if `$value` is an angle\n/// @param {*} $value - Value to test\n/// @return {Bool}\n///\n@function is-direction($value) {\n\t$is-direction: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);\n\t$is-angle: type-of($value) == \"number\" and index(\"deg\" \"grad\" \"turn\" \"rad\", unit($value));\n\n\t@return $is-direction or $is-angle; }\n\n/// Convert a direction to legacy syntax\n/// @param {Keyword | Angle} $value - Value to convert\n/// @require {function} is-direction\n/// @require {function} convert-angle\n///\n@function legacy-direction($value) {\n\t@if is-direction($value) == false {\n\t\t@warn \"Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be an angle or a direction\"; }\n\n\t$conversion-map: (to top: bottom, to top right: bottom left, to right top: left bottom, to right: left, to bottom right: top left, to right bottom: left top, to bottom: top, to bottom left: top right, to left bottom: right top, to left: right, to left top: right bottom, to top left: bottom right);\n\n\t@if map-has-key($conversion-map, $value) {\n\t\t@return map-get($conversion-map, $value); }\n\n\t@return 90deg - convert-angle($value, \"deg\"); }\n\n/// Mixin printing a linear-gradient\n/// as well as a plain color fallback\n/// and the `-webkit-` prefixed declaration\n/// @param {String | List | Angle} $direction - Linear gradient direction\n/// @param {Arglist} $color-stops - List of color-stops composing the gradient\n///\n@mixin linear-gradient($direction, $color-stops...) {\n\t@if is-direction($direction) == false {\n\t\t$color-stops: $direction, $color-stops;\n\t\t$direction: 180deg; }\n\n\tbackground: nth(nth($color-stops, 1), 1);\n\tbackground: -webkit-linear-gradient(legacy-direction($direction), $color-stops);\n\tbackground: linear-gradient($direction, $color-stops); }\n\n// Tests\n//.test-1\n//\t+linear-gradient(#31B7D7, #EDAC7D)\n//\n//.test-2\n//\t+linear-gradient(to right, #E47D7D 0%, #C195D3 50%, #4FB4E8 100%)\n//\n//.test-3\n//\t+linear-gradient(42deg, #B58234 0%, #D2B545 50%, #D7C04D 50.01%, #FFFFFF 100%)\n\n\n// =============================================================================\n// Font Face Generator\n// =============================================================================\n/// Примесь генерирует подключение @font-face шрифтов\n///\n/// @author []\n///\n/// @param {String} $name [] - название шрифта\n/// @param {String} $path [] - путь к шрифту включая файл без расширения\n/// @param {String} $weight [null] - значение `font-weight`\n/// @param {String} $style [null] - значение `font-style`\n/// @param {Map} $exts [eot woff2 woff ttf svg] - мапа расширений шрифта\n///\n/// @example Sass - Использование\n///\n/// +font-face(\"candara\", \"../fonts/candara/regular/candara\", normal, normal, eot woff ttf svg)\n///\n/// @example css - Вывод CSS\n///\n/// @font-face{\n///   font-family: \"название-шрифта\";\n///   font-style: normal;\n///   font-weight: normal;\n///   src: url(\"../fonts/candara/regular/candara.eot?\") format(\"eot\"), url(\"../fonts/candara/regular/candara.woff\") format(\"woff\"), url(\"../fonts/candara/regular/candara.ttf\") format(\"truetype\"), url(\"../fonts/candara/regular/candara.svg#candara-regular\") format(\"svg\");\n/// }\n\n@function str-replace($string, $search, $replace: \"\") {\n\t$index: str-index($string, $search);\n\n\t@if $index {\n\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }\n\n\t@return $string; }\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n\t$src: null;\n\n\t$extmods: (eot: \"?\", svg: \"#\" + str-replace($name, \" \", \"_\"));\n\n\t$formats: (otf: \"opentype\", ttf: \"truetype\");\n\n\t@each $ext in $exts {\n\t\t$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n\t\t$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n\t\t$src: append($src, url(quote($path + \".\" + $extmod)) format(quote($format)), comma); }\n\n\t@font-face {\n\t\tfont-family: quote($name);\n\t\tfont-style: $style;\n\t\tfont-weight: $weight;\n\t\tsrc: $src; } }\n\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ИСПОЛЬЗУЕМЫЕ В ТИОПОГРАФИЧЕСКИХ СТИЛЯХ\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ИСПОЛЬЗУЕМЫЕ В ТИПОГРАФИЧЕСКИХ СТИЛЯХ конец\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ДЛЯ ПРИНТ ВЕРСИИ\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n@mixin print-reset() {\n\tdisplay: block !important;\n\tfloat: none !important;\n\tposition: relative !important;\n\toverflow: visible !important;\n\theight: auto !important;\n\tmin-height: 0 !important;\n\tmax-height: none !important;\n\twidth: auto !important;\n\tmin-width: 0 !important;\n\tmax-width: none !important;\n\tleft: auto !important;\n\ttop: auto !important;\n\tright: auto !important;\n\tbottom: auto !important;\n\tpadding: 0 !important;\n\tmargin: 0 !important;\n\ttransform: none !important;\n\ttext-align: left !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\topacity: 1 !important;\n\tvisibility: visible !important;\n\tz-index: auto !important; }\n\n@mixin prints-space-bottom-sm() {\n\tmargin-top: 0 !important;\n\tmargin-bottom: 0.5cm !important;\n\tpadding-bottom: 0 !important; }\n\n@mixin prints-space-bottom-md() {\n\tmargin-top: 0 !important;\n\tmargin-bottom: 1cm !important;\n\tpadding-bottom: 0 !important; }\n\n@mixin prints-space-bottom-lg() {\n\tmargin-bottom: 1.5cm !important;\n\tpadding-bottom: 0 !important; }\n\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n// ПРИМЕСИ ДЛЯ ПРИНТ ВЕРСИИ конец\n// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//\n","// =============================================================================\n// pow\n// =============================================================================\n/// Возведение в степень\n///\n/// @param {Number, Length} $number - Число\n/// @param {Number, Length} $exponent - Степень\n/// @return {Number} - Значение `$number` возведенно в степень `$exponent`\n\n@function pow($number, $exponent) {\n\t$value: 1;\n\n\t@if $exponent > 0 {\n\t\t@for $i from 1 through $exponent {\n\t\t\t$value: $value * $number; } }\n\n\t@return $value; }\n\n// =============================================================================\n// round-float\n// =============================================================================\n/// Округление до n знаков после запятой\n///\n/// @param {Number, Length} $number - Число\n/// @param {Number, Length} $n - Количество знаков после запяной\n/// @return {Number} - Значение округленное до `n` знаков после запятой\n\n@function round-float($number, $n) {\n\t$float: pow(10,$n);\n\n\t$value: round($number*$float)/$float;\n\n\t@return $value; }\n"]}